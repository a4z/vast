#pragma once

#cmakedefine01 VAST_ENABLE_ASSERTIONS
#cmakedefine01 VAST_HAVE_PCAP
#cmakedefine01 VAST_HAVE_ARROW
#cmakedefine01 VAST_HAVE_BROCCOLI
#cmakedefine01 VAST_USE_JEMALLOC
#cmakedefine01 VAST_USE_OPENCL
#cmakedefine01 VAST_USE_OPENSSL
#cmakedefine01 VAST_RELOCATABLE_INSTALL
#define VAST_VERSION "@VAST_VERSION_TAG@"
#define VAST_SYSCONFDIR "@CMAKE_INSTALL_FULL_SYSCONFDIR@"
#define VAST_DATADIR "@CMAKE_INSTALL_FULL_DATADIR@"

#include <caf/config.hpp>

#define VAST_LOG_LEVEL_QUIET CAF_LOG_LEVEL_QUIET
#define VAST_LOG_LEVEL_CRITICAL 1
#define VAST_LOG_LEVEL_ERROR CAF_LOG_LEVEL_ERROR
#define VAST_LOG_LEVEL_WARNING CAF_LOG_LEVEL_WARNING
#define VAST_LOG_LEVEL_INFO CAF_LOG_LEVEL_INFO
#define VAST_LOG_LEVEL_VERBOSE 11
#define VAST_LOG_LEVEL_DEBUG CAF_LOG_LEVEL_DEBUG
#define VAST_LOG_LEVEL_TRACE CAF_LOG_LEVEL_TRACE

#define VAST_LOG_LEVEL VAST_LOG_LEVEL_@VAST_LOG_LEVEL@

#if defined(CAF_CLANG)
#  define VAST_CLANG 1
#  define VAST_DIAGNOSTIC_PUSH  _Pragma("clang diagnostic push")
#  define VAST_DIAGNOSTIC_POP   _Pragma("clang diagnostic pop")
#  define VAST_DIAGNOSTIC_IGNORE_DEPRECATED                                 \
     _Pragma("clang diagnostic ignored \"-Wdeprecated\"")
#  define VAST_DIAGNOSTIC_IGNORE_VLA_EXTENSION                              \
     _Pragma("clang diagnostic ignored \"-Wvla-extension\"")                \
     _Pragma("clang diagnostic ignored \"-Wgnu-folding-constant\"")
#elif defined(CAF_GCC)
#  define VAST_GCC 1
#  define VAST_DIAGNOSTIC_PUSH  _Pragma("GCC diagnostic push")
#  define VAST_DIAGNOSTIC_POP   _Pragma("GCC diagnostic pop")
#  define VAST_DIAGNOSTIC_IGNORE_DEPRECATED                                 \
     _Pragma("GCC diagnostic ignored \"-Wdeprecated\"")
#  define VAST_DIAGNOSTIC_IGNORE_VLA_EXTENSION                              \
     _Pragma("GCC diagnostic ignored \"-Wvla\"")
#endif

#if defined(CAF_MACOS)
#  define VAST_MACOS 1
#elif defined(CAF_LINUX)
#  define VAST_LINUX 1
#elif defined(CAF_BSD)
#  define VAST_BSD 1
#elif defined(CAF_WINDOWS)
#  define VAST_WINDOWS 1
#else
#  error platform not supported
#endif
#ifdef CAF_POSIX
#  define VAST_POSIX 1
#endif

#ifdef CAF_NO_EXCEPTIONS
#define VAST_NO_EXCEPTIONS 1
#endif

// Convenience macros
#define VAST_IGNORE_UNUSED(x) CAF_IGNORE_UNUSED(x)
